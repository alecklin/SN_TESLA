<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_tesla_tesla_account</collection>
        <condition>!gs.nil(current.password.getDecryptedValue());</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_tesla_tesla_account">usernameVALCHANGES^ORpasswordVALCHANGES^usernameISNOTEMPTY^EQ<item endquery="false" field="username" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="password" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="username" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Get Token</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	gs.debug("running get TOKEN business rule"); //...
	workflow = new global.Workflow();
	wfId = workflow.getWorkflowFromName('Get Tesla Token');	

    var workflowVars = {};
    workflowVars["u_username"] =  current.username;
    workflowVars["u_password"] =  current.password;

    var context = workflow.startFlow(wfId, current, current.operation(), workflowVars);	
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>aleck.lin</sys_created_by>
        <sys_created_on>2017-11-18 02:13:03</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e03f3d3c4faac7002f9ae4928110c72c</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>Get Token</sys_name>
        <sys_overrides/>
        <sys_package display_value="Tesla" source="x_snc_tesla">7441c3a64f5a4f002f9ae4928110c771</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Tesla">7441c3a64f5a4f002f9ae4928110c771</sys_scope>
        <sys_update_name>sys_script_e03f3d3c4faac7002f9ae4928110c72c</sys_update_name>
        <sys_updated_by>aleck.lin</sys_updated_by>
        <sys_updated_on>2017-12-06 06:33:00</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e03f3d3c4faac7002f9ae4928110c72c"/>
</record_update>
